# Local Development Inventory
# Points to Docker containers instead of real VPS

all:
  children:
    jterrazz_servers:
      hosts:
        jterrazz-local:
          # Docker container connection
          ansible_host: localhost
          ansible_port: 2222
          ansible_user: ubuntu
          ansible_ssh_private_key_file: "{{ playbook_dir }}/../local-data/ssh/id_rsa"
          ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
          
          # Local environment flags
          is_local_environment: true
          skip_security: true         # Skip security hardening in local env
          skip_tailscale: true        # Skip Tailscale in local env
          skip_cert_manager: true     # Skip cert-manager in local env (no real SSL needed)
          skip_ufw_strict: true       # Allow more permissive firewall for testing
          skip_ssh_hardening: true    # Keep SSH accessible for development
          
          # k3s configuration for local
          k3s_server: true
          k3s_node_ip: "172.20.0.2"  # Docker network IP
          k3s_flannel_interface: "eth0"
          
          # Local SSL configuration (self-signed for testing)
          use_self_signed_certs: true
          local_domain: "jterrazz.local"
          
  vars:
    # Global variables for local environment
    ansible_python_interpreter: /usr/bin/python3
    
    # Environment markers
    environment_type: "local"
    deployment_method: "docker"
    
    # Security settings (relaxed for local dev)
    security_level: "development"
    enable_audit_logging: false
    enable_fail2ban: false
    
    # k3s settings
    k3s_version: v1.28.5+k3s1
    k3s_token: "local-dev-token-not-secure"  # Fixed token for local testing
    
    # Local networking
    cluster_cidr: "10.42.0.0/16"
    service_cidr: "10.43.0.0/16"
    
    # Portainer settings
    portainer_enabled: true
    portainer_port: 9000
    
    # DNS settings for local
    local_dns_enabled: true
    local_domain_suffix: ".local"
