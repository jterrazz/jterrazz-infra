# Local Development Configuration
# Overrides for Docker container testing environment

---
# Environment identification
environment_type: "multipass"
deployment_method: "docker"
is_local_development: true

# Security settings (relaxed for local development)
security_level: "development"
skip_ssh_hardening: true
skip_ufw_strict_rules: true
enable_fail2ban: false
enable_audit_logging: false
allow_password_auth: true # For easy local access

# Networking settings
use_host_network: false
local_testing: true

# SSL/TLS settings (self-signed for local)
use_self_signed_certs: true
ssl_provider: "self-signed"
local_domain: "jterrazz.local"
skip_letsencrypt: true

# k3s configuration for local development
k3s_server: true
k3s_token: "local-dev-token-insecure-but-fine"
k3s_node_ip: "{{ ansible_default_ipv4.address }}"
k3s_flannel_interface: "eth0"
k3s_cluster_cidr: "10.42.0.0/16"
k3s_service_cidr: "10.43.0.0/16"
k3s_disable_network_policy: true # Simplify networking for local testing

# Helm settings
helm_add_stable_repo: true
helm_repositories:
  - name: stable
    url: https://charts.helm.sh/stable

# Traefik settings (built-in with k3s - no additional config needed!)
# k3s comes with Traefik pre-configured for:
# - Automatic HTTPS redirects
# - Built-in ACME/Let's Encrypt support
# - Service discovery and load balancing

# ArgoCD settings for local development
argocd_namespace: "argocd"

# Portainer settings
portainer_namespace: "portainer"

# Skip external services in local environment
skip_tailscale: true
skip_external_dns: true
skip_real_ssl: true

# Local-specific features
enable_local_storage: true # Use local storage classes

# Debug settings
ansible_debug: true
k3s_debug: true
verbose_output: true
# Local DNS: Pure mDNS via Kubernetes mDNS publisher pod (scripts/setup-mdns-resolver.sh)
