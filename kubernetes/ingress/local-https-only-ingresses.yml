# HTTPS-Only Ingresses - Production Security
# All HTTP traffic redirected to HTTPS, no insecure access allowed

---
# Main Application Ingress - HTTPS Only with Path Routing
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: main-ingress
  namespace: default
  annotations:
    # Force HTTPS redirect - no HTTP access allowed
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  ingressClassName: traefik
  tls:
    - hosts:
        - jterrazz-infra.local
  rules:
    - host: jterrazz-infra.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nginx-service
                port:
                  number: 80

---
# ArgoCD Ingress - HTTPS Only with Subpath
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server-ingress
  namespace: argocd
  annotations:
    # Force HTTPS redirect - no HTTP access allowed
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/backend-protocol: HTTP
    # Strip prefix for ArgoCD backend
    traefik.ingress.kubernetes.io/router.middlewares: argocd-stripprefix@kubernetescrd
spec:
  ingressClassName: traefik
  tls:
    - hosts:
        - jterrazz-infra.local
  rules:
    - host: jterrazz-infra.local
      http:
        paths:
          - path: /argocd
            pathType: Prefix
            backend:
              service:
                name: argocd-server
                port:
                  number: 80

---
# Portainer Ingress - HTTPS Only with Subpath
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: portainer-ingress
  namespace: portainer
  annotations:
    # Force HTTPS redirect - no HTTP access allowed
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/backend-protocol: HTTP
    # Strip prefix for Portainer backend
    traefik.ingress.kubernetes.io/router.middlewares: portainer-stripprefix@kubernetescrd
spec:
  ingressClassName: traefik
  tls:
    - hosts:
        - jterrazz-infra.local
  rules:
    - host: jterrazz-infra.local
      http:
        paths:
          - path: /portainer
            pathType: Prefix
            backend:
              service:
                name: portainer
                port:
                  number: 9000

---
# ArgoCD StripPrefix Middleware
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: argocd-stripprefix
  namespace: argocd
spec:
  stripPrefix:
    prefixes:
      - /argocd

---
# Portainer StripPrefix Middleware
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: portainer-stripprefix
  namespace: portainer
spec:
  stripPrefix:
    prefixes:
      - /portainer

---
# Global HTTP to HTTPS Redirect Middleware
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: https-redirect-global
  namespace: default
spec:
  redirectScheme:
    scheme: https
    permanent: true
