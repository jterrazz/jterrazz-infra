---
# Traefik TLS configuration for automatic ACME certificates
# This configures Traefik's built-in ACME support (no cert-manager needed!)
apiVersion: traefik.containo.us/v1alpha1
kind: TLSStore
metadata:
  name: default
  namespace: default
spec:
  defaultCertificate:
    secretName: default-tls

---
# ACME configuration for automatic SSL certificates
# NOTE: This is configured via Traefik's static configuration
# For production, you would configure this in the Traefik deployment
# or via command line arguments when k3s starts Traefik

# Example configuration that would go in the Traefik static config:
# certificatesResolvers:
#   letsencrypt:
#     acme:
#       email: your-email@domain.com
#       storage: /data/acme.json
#       httpChallenge:
#         entryPoint: web
#       # OR for DNS challenge:
#       # dnsChallenge:
#       #   provider: cloudflare

# For k3s + Traefik ACME, you would typically:
# 1. Modify the Traefik deployment to add ACME configuration
# 2. Or use k3s server args: --traefik-config-file=/path/to/traefik-config.yml
# 3. Or patch the existing Traefik configuration

apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik-acme-config
  namespace: kube-system
  labels:
    app.kubernetes.io/name: traefik
data:
  traefik-acme.yml: |
    # Example Traefik dynamic configuration for ACME
    # This would be mounted into the Traefik container
    certificatesResolvers:
      letsencrypt:
        acme:
          email: admin@{{ domain_name | default('localhost') }}
          storage: /data/acme.json
          httpChallenge:
            entryPoint: web
