---
# mDNS Publisher for local development
# Publishes .local domains for zero-configuration DNS
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mdns-publisher
  namespace: default
  labels:
    app: mdns-publisher
    environment: local
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mdns-publisher
  template:
    metadata:
      labels:
        app: mdns-publisher
    spec:
      hostNetwork: true
      containers:
        - name: mdns-publisher
          image: ubuntu:22.04
          command: ["/bin/bash"]
          args:
            - -c
            - |
              # Install mDNS tools
              apt-get update -qq && apt-get install -y avahi-daemon avahi-utils iproute2

                            # Get the VM's external IP from the host network interface
              # Since we're using hostNetwork: true, we can get the VM's actual IP
              EXTERNAL_IP=$(ip addr show | grep 'inet 192\.168\.' | head -1 | awk '{print $2}' | cut -d/ -f1)

              # Fallback if the above doesn't work
              if [[ -z "$EXTERNAL_IP" ]]; then
                EXTERNAL_IP=$(hostname -I | awk '{print $1}')
              fi

              echo "Publishing mDNS for IP: $EXTERNAL_IP"

              # Start services
              service dbus start || true
              service avahi-daemon start || true

              # Publish our domains
              avahi-publish -a -R app.local $EXTERNAL_IP &
              avahi-publish -a -R argocd.local $EXTERNAL_IP &
              avahi-publish -a -R portainer.local $EXTERNAL_IP &

              echo "mDNS publisher started for $EXTERNAL_IP"

              # Keep the container running
              while true; do sleep 60; done
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
---
# Only deploy in local development
# Production uses real DNS
