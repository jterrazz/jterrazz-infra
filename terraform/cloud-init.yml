#cloud-config
# JTerrazz Infrastructure - Cloud-init configuration
# Basic server setup before Ansible takes over

hostname: ${hostname}
fqdn: ${hostname}.local

# Update packages and install essential tools
package_update: true
package_upgrade: true

packages:
  - curl
  - wget
  - git
  - vim
  - htop
  - unzip
  - ca-certificates
  - gnupg
  - lsb-release
  - python3
  - python3-pip

# SSH configuration  
ssh_authorized_keys:
  - ${ssh_public_key}

# Disable password authentication
ssh_pwauth: false

# Configure firewall (basic rules, Terraform will add more)
runcmd:
  - systemctl enable ufw
  - ufw default deny incoming
  - ufw default allow outgoing
  - ufw allow ssh
  - ufw --force enable
  
  # Install Python for Ansible
  - python3 -m pip install --upgrade pip
  
  # Prepare for k3s installation (create directories)
  - mkdir -p /etc/rancher/k3s
  - mkdir -p /var/lib/rancher/k3s/storage
  
  # Set timezone
  - timedatectl set-timezone UTC
  
  # Update system
  - apt-get update
  - apt-get upgrade -y
  - apt-get autoremove -y

# Write marker file to indicate cloud-init completion
write_files:
  - path: /tmp/cloud-init-complete
    content: |
      Cloud-init setup completed at $(date)
      Ready for Ansible configuration
    permissions: '0644'

# Final message
final_message: |
  Cloud-init setup completed!
  Server is ready for Ansible configuration.
  
  Next steps:
  1. Run Terraform to get server details
  2. Run Ansible playbook to install k3s and applications
  
  SSH: ssh root@$(curl -s ifconfig.me)
